# -*- coding: utf-8 -*-
"""training_NVDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LPAw-qW8rb_wfH9hF5Iv1Zn3kUfil5zr
"""

# Step 1: Install Required Libraries
!pip install yfinance pandas sklearn joblib

# Step 2: Import Libraries
import yfinance as yf
import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
import joblib

# Step 3: Mount Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Step 4: Fetch Historical Data from Yahoo Finance
ticker = 'NVDA'  # NVIDIA stock ticker
start_date = '2021-11-18'
end_date = '2024-12-16'

# Fetch historical market data using yfinance
data = yf.download(ticker, start=start_date, end=end_date, interval='1d')

# Display the first few rows to verify the data
print(data.head())

# Step 5: Data Preprocessing and Feature Engineering
def create_lagged_features(data, n_lags=5):
    df = data.copy()
    for i in range(1, n_lags + 1):
        df[f'lag_{i}'] = df['Close'].shift(i)
    df.dropna(inplace=True)
    return df

data_with_lags = create_lagged_features(data[['Open', 'High', 'Low', 'Close', 'Volume']])

# Create features and target variables for all price points
X = data_with_lags.drop('Close', axis=1)
y = data_with_lags[['Open', 'High', 'Low', 'Close']]

# Split into training and validation sets (80-20 split)
X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale the features using StandardScaler
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_val_scaled = scaler.transform(X_val)

# Step 6: Build and Train the Random Forest Model for Multi-output Regression
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train_scaled, y_train)

# Step 7: Save the Trained Model and Scaler using Joblib to Google Drive
model_save_path = '/content/drive/MyDrive/CMPE257 Project/final/random_forest_nvda.pkl'
scaler_save_path = '/content/drive/MyDrive/CMPE257 Project/final/scaler_nvda.pkl'
joblib.dump(rf_model, model_save_path)
joblib.dump(scaler, scaler_save_path)

print(f"Model saved successfully at {model_save_path}!")
print(f"Scaler saved successfully at {scaler_save_path}!")